package home_work_1.task1;

public class Task1_3 {
    public static void main(String[] args) {
        int x = -42;
        int y = -15;

        //1. ~	Побитовый унарный оператор NOT
        //x= 11010110, y= 11110001
        //~x=101001, ~y= 1110
        //~x= 41, ~y= 14
        System.out.println(x + " " + y);
        System.out.println("1. ~\tПобитовый унарный оператор NOT: ~x = " + (~x) + ", ~y = " + (~y) + ", x bin = " + Integer.toBinaryString((~x)) + ", y bin = " + Integer.toBinaryString((~y)));

        //2. &	Побитовый AND
        //x= 11010110, y= 11110001
        //x & y = 11111111111111111111111111010000 (-48)
        System.out.println("2. &\tПобитовый AND: x & y =" + (x & y) + ", bin = " + Integer.toBinaryString((x & y)));

        //3. &=	Побитовый AND с присваиванием
        //x= 11010110, y= 11110001
        //x = 11111111111111111111111111010000 (-48)
        System.out.println("3. &=\tПобитовый AND с присваиванием: x &= y ->" + (x &= y) + " , x = " + x + ", bin = " + Integer.toBinaryString((x)));

        x = -42;
        //4. | Побитовый OR
        //x= 11010110, y= 11110001
        //x | y = 11111111111111111111111111110111 (-9)
        System.out.println("4. | Побитовый OR: x | y = " + (x | y) + ", bin = " + Integer.toBinaryString((x | y)));

        //5.|=	Побитовый OR с присваиванием
        //x= 11010110, y= 11110001
        //x |= y -> 11111111111111111111111111110111 (-9)
        System.out.println("5.|=\tПобитовый OR с присваиванием: x |= y ->" + (x |= y) + " bin = " + Integer.toBinaryString((x |= y)));

        x = -42;
        //6. ^	Побитовый исключающее OR
        //x= 11010110, y= 11110001
        //x ^ y = 100111  (39)
        System.out.println("6. ^\tПобитовый исключающее OR: x ^ y = " + (x ^ y) + " bin = " + Integer.toBinaryString((x ^ y)));

        //7. ^= Побитовый исключающее OR с присваиванием
        //x= 11010110, y= 11110001
        //x ^= y -> 11111111111111111111111111010110 (39)
        System.out.println("7. ^= Побитовый исключающее OR с присваиванием: x ^= y ->" + (x ^= y) + " bin = " + Integer.toBinaryString((x ^= y)));

        x = -42;
        //8. >>	Сдвиг вправо
        //x= 11010110, y= 11110001
        //x >> y -> 11111111111111111111111111111111 (-1)
        System.out.println("8. >>\tСдвиг вправо: x >> y ->" + (x >> y) + " bin = " + Integer.toBinaryString((x >> y)));

        //9.>>=	Сдвиг вправо с присваиванием
        //x= 11010110, y= 11110001
        //x >>= y -> 11111111111111111111111111111111 (-1)
        System.out.println("9.>>=\tСдвиг вправо с присваиванием: x >>= y ->" + (x >>= y) + " bin = " + Integer.toBinaryString((x >>= y)));

        x = -42;
        //10. >>>	Сдвиг вправо с заполнением нулями
        //x= 11010110, y= 11110001
        //Чтобы не получать значение 0 из-за выхода за границы, примем z = 3
        //x >>> y -> 11111111111111111111111111010 (536870906)

        int z = 3;
        System.out.println("10. >>>\tСдвиг вправо с заполнением нулями: x >>> y ->" + (x >>> z) + " bin = " + Integer.toBinaryString((x >>> z)));

        //11. <<	Сдвиг влево
        //x= 11010110, y= 11110001
        //x << y -> 11111111101011000000000000000000 (-5505024)

        System.out.println("11. <<\tСдвиг влево: x << y ->" + (x << y) + " bin = " + Integer.toBinaryString((x << y)));

        //12.  <<=	Сдвиг влево с присваиванием
        //x= 11010110, y= 11110001
        //x <<= y -> 11111111101011000000000000000000 (-5505024)

        System.out.println("12.  <<=\tСдвиг влево с присваиванием: x <<= y ->" + (x <<= y) + " bin = " + Integer.toBinaryString((x)));

        x = -42;
        //13. >>>=	Сдвиг вправо с заполнением нулями с присваиванием
        //x= 11010110, y= 11110001
        //x >>> y -> 11111111111111111111111111 (536870906)

        System.out.println("13. >>>=\tСдвиг вправо с заполнением нулями с присваиванием: x >>>= y ->" + (x >>>= z) + " bin = " + Integer.toBinaryString((x >>>= z)));




    }
}
